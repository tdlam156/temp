getCacheStringeeUser(isClear = false): any {
    const userData = sessionStorage.getItem(StorageConstant.StringeeUser);
    if (!userData) {
      return [];
    }
    const item = JSON.parse(userData);
    const now = new Date();
    const timeExpired = new Date(item.expired);
    // compare the expiry time of the item with the current time
    if (now.getTime() > timeExpired.getTime() && isClear) {
      // If the item is expired, delete the item from storage
      // and return null
      localStorage.removeItem(StorageConstant.StringeeUser);
      return [];
    }
    return item.value;
  },

  setCacheStringeeUser(stringeeUsers): void {
    if (!(Array.isArray(stringeeUsers) && stringeeUsers.length)) {
      return;
    }
    const d1 = new Date();
    const d2 = new Date(d1);
    d2.setMinutes(d1.getMinutes() + 30);
    const listOld = CommonFn.getCacheStringeeUser() ?? [];
    var ids = new Set(listOld.map(d => d.StringeeUserID));
    var merged = [...listOld, ...stringeeUsers.filter(d => !ids.has(d.StringeeUserID))];
    const item = {
      value: merged,
      expired: d2,
    };
    sessionStorage.setItem(StorageConstant.StringeeUser, JSON.stringify(item));
  },